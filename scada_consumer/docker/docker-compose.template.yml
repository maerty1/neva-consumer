services:
  scada_consumer:
    container_name: scada
    restart: unless-stopped
    build:
      context: ../
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      KAFKA_CONSUMER_TOPIC: scada_topic
      KAFKA_CONSUMER_GROUP_ID: local_group
      KAFKA_BROKERS: rc1b-c85e45nkbeppesdk.mdb.yandexcloud.net
      KAFKA_SECURITY_PROTOCOL: ${SCADA_KAFKA_SECURITY_PROTOCOL}
      KAFKA_SASL_MECHANISM: ${SCADA_KAFKA_SASL_MECHANISM}
      KAFKA_SASL_PLAIN_USERNAME: ${SCADA_KAFKA_SASL_PLAIN_USERNAME}
      KAFKA_SASL_PLAIN_PASSWORD: ${SCADA_KAFKA_SASL_PLAIN_PASSWORD}
      POSTGRESQL_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${SCADA_POSTGRES_DB_NAME}?sslmode=require
      POSTGRES_MAX_CONNECTIONS: 1
      RABBITMQ_URL: amqp://${SCADA_RABBITMQ_DEFAULT_USER}:${SCADA_RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      RABBITMQ_CONSUMER_QUEUE: test
      RABBITMQ_CONSUMER_TAG: tag
      RABBITMQ_DAILY_QUEUE: DAILY
      RABBITMQ_ASAP_QUEUE: ASAP
      RABBITMQ_10MIN_QUEUE: 10MIN
    # volumes:
    #   - ../pkg:/code/pkg
    #   - ../cmd:/code/cmd
    #   - ../internal:/code/internal
    networks:
      - scada

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.13.6-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${SCADA_RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${SCADA_RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scada

networks:
  scada:
    name: scada
    external: true
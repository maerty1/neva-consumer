from pprint import pprint

IDS = """
1_1
2_9
3_10
4_13
5_16
6_17
7_18
8_19
9_20
10_2
11_3
12_4
12_24
13_5
14_6
15_7
16_8
17_22
18_26
19_30
20_35
21_40
22_44
23_48
24_70
25_74
26_79
27_84
28_87
29_90
30_93
31_113
32_127
34_136
35_140
36_188
37_6
38_31
39_12
39_32
40_14
40_34
41_15
41_35
42_36
43_37
43_91
44_38
44_92
45_39
46_40
47_41
48_42
49_43
50_103
50_109
51_100
52_47
53_48
53_102
54_49
55_50
56_51
56_105
57_9
58_107
59_164
60_21
60_166
61_39
61_169
62_58
63_60
63_162
64_62
64_163
65_64
66_66
67_34
67_67
67_192
68_68
69_69
69_194
70_82
70_195
71_83
72_96
73_97
74_98
75_99
76_104
81_150
82_152
83_154
84_156
85_158
86_159
87_160
88_161
91_168
92_175
93_177
94_179
95_181
96_183
97_184
98_185
99_186
100_187
"""


NAMES = """
Авария автомата К2.1
Авария автомата К2.2
Авария автомата К4
Авария на насосе К2.1
Авария на насосе К2.2
Авария на насосе К4
Авария подпитки
Неисправность Р обратной сетевой
Неисправность Р после К2
Неисправность Р после К4
Неисправность Т наружного воздуха
Неисправность Т при тепловой сети
Неисправность Т прямой тепловой сети
Нет связи Н2
Общая авария
Превышение Р обратной
Предварительное отключение тепла
Автомат насоса К2.1
Автомат насоса К2.2
Автомат насоса перепуска
Автомат подпитки
Включен ли насос К2.1
Включен ли насос К2.2
Включен ли насос перепуска
Давление обратной сетевой
Давление после К2
Давление после К4
Клапан внут.тепл. — Задание
Клапан внут.тепл. — Задание обратной
Клапан внут.тепл. — Коррекция включена
Клапан внут.тепл. — Рассогласование
Наработка насоса перепуска
Перепад давления
Подпитка — автоматическая работа
Подпитка включена
Температура наружного воздуха
?КлапВнутрТеплТпрТеплосеть
Авария автомата К7
Ошибка ВКТ5
Авария автомата QF Н2.2
Пожар!
Авария котла 1
Сухой ход
Авария котла 2
Загазованность метаном 0,5%
Загазованность метаном 1%
Авария подкачки
Загазованность СО 100 мг
Модем
Загазованность СО 20 мг
Неисправность Р после К7
Неисправность Т прямой ГВС
Нет связи Н3
Нет связи Н4
Масса — канал 4
Наработка насоса К2.2
Питание
Резкое повышение газа
Резкое снижение газа
Превышение давления в К2.1
Сухой ход К4
Сухой ход К7
Сухой ход на насосе отопления
Превышение давления в К2.2
?КлапГВС_ДСП_тГВС_Праздн
Сухой ход К2
Расходомер — расход перепуска
Автомат насоса ГВС
Расходомер — расход подпитки
Включен ли насос ГВС
Температура
Давление — канал 1
Давление — канал 2
Расход перепуска
Давление — канал 3
Расход подпитки
Давление — канал 4
Давление — канал 5
Автомат насоса перепуска К4
Давление — канал 6
Температура теплосети
Давление — канал 7
Давление — канал 8
Теплопотребление — канал 1
Давление после К7
Теплопотребление — канал 2
Закрыт газовый клапан
Клапан ГВС —
Клапан ГВС — Задание
Клапан ГВС — Коррекция включена
Клапан ГВС — Рассогласование
Наработка насоса ГВС
Расход — канал 1
Расход — канал 2
Расход — канал 3
Расход — канал 4
Расход — канал 5
Расход — канал 6
Расход — канал 7
Расход — канал 8
Регулятор ГВС
Температура — канал 1
Температура — канал 2
Температура — канал 3
Температура — канал 4
Температура — канал 5
Температура — канал 6
Температура — канал 7
Температура — канал 8
Температура ГВС
"""


def strings_spliting(ids: str, names: str) -> tuple[list[str], list[str]]:
    ids_list = [iD.split("_")[0] for iD in ids.replace("\n", ",").strip().split(",")[1:-1]]
    names_list = names.replace("\n", "/").strip().split("/")[1:-1]

    return ids_list, names_list


def dict_formating(ids_list: list[str], names_list: list[str]) -> dict[str]:
    formated_dict = {}
    n = 1
    for iD, name in zip(ids_list, names_list):
        formated_dict[iD + "_" + f"{n}"] = name
        n += 1

    return formated_dict


def calculate_table_strings(ids_names_dict: dict[str, str]) -> dict[str, int]:
    unique_ids_names_dict = {}
    seen_values = set()
    for key, value in ids_names_dict.items():
        if value not in seen_values:
            unique_ids_names_dict[key] = value
            seen_values.add(value)

    return unique_ids_names_dict


def dict_sorting(unique_ids_names_dict: dict[int, str]) -> dict[int, str]:
    sorted_data = dict(sorted(unique_ids_names_dict.items(), key=lambda item: tuple(map(int, item[0].split("_")))))
    return sorted_data


if __name__ == "__main__":
    # ids_list, names_list = strings_spliting(IDS, NAMES)
    # print(ids_list, len(ids_list), end="\n\n")
    # print(names_list, len(names_list), end="\n\n")
    # formated_dict = dict_formating(ids_list, names_list)
    # print(formated_dict, end="\n\n")
    # unique_ids_names_dict = calculate_table_strings(formated_dict)
    # print(unique_ids_names_dict, end="\n\n")
    # dict_sorted = dict_sorting(unique_ids_names_dict)
    # print(dict_sorted, end="\n\n")

    # for sort_key, sort_value in dict_sorted.items():
    #     print(sort_key)

    data = """
71	Закрыт газовый клапан	MSD
72	Клапан ГВС —	MSD
73	Клапан ГВС — Задание	MSD
74	Клапан ГВС — Коррекция включена	MSD
75	Клапан ГВС — Рассогласование	MSD
76	Наработка насоса ГВС	MSD
81	Расход — канал 1	MSD
82	Расход — канал 2	MSD
83	Расход — канал 3	MSD
84	Расход — канал 4	MSD
85	Расход — канал 5	MSD
86	Расход — канал 6	MSD
87	Расход — канал 7	MSD
88	Расход — канал 8	MSD
91	Регулятор ГВС	MSD
92	Температура — канал 1	MSD
93	Температура — канал 2	MSD
94	Температура — канал 3	MSD
95	Температура — канал 4	MSD
96	Температура — канал 5	MSD
97	Температура — канал 6	MSD
98	Температура — канал 7	MSD
99	Температура — канал 8	MSD
100	Температура ГВС	MSD
    """

    tab = "\t"
    for dt in data.split("\n")[1:-1]:
        print(f"""({dt.split(tab)[0]}, "{dt.split(tab)[1]}", "{dt.split(tab)[2]}"),""")
